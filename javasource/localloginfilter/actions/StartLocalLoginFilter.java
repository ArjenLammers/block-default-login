// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package localloginfilter.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import localloginfilter.impl.LocalLoginFilterAction;
import localloginfilter.impl.LocalLoginFilterActionListener;

/**
 * This action will block the default login (e.g. through the login.html or using the default sign in components).
 * This is typically applied when your application should only be accessible through SSO.
 */
public class StartLocalLoginFilter extends CustomJavaAction<java.lang.Boolean>
{
	public StartLocalLoginFilter(IContext context)
	{
		super(context);
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		Core.addUserAction(LocalLoginFilterAction.class);
		LocalLoginFilterActionListener listener = new LocalLoginFilterActionListener();
		listener.addReplaceEvent(LocalLoginFilterAction.class.getName());
		Core.getListenersRegistry().addListener(listener);
		
		LOGGER.info("Added local login filter.");
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StartLocalLoginFilter";
	}

	// BEGIN EXTRA CODE
	private static ILogNode LOGGER = Core.getLogger("LocalLoginFilter");
	// END EXTRA CODE
}
